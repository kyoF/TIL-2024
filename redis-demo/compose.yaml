services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./backend
      dockerfile: ./.docker/Dockerfile
    environment:
      TZ: Asia/Tokyo
    ports:
      - 8888:8888
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - redisdemo
    volumes:
      - ./backend:/app

  frontend:
    container_name: frontend
    hostname: frontend
    build:
      context: ./frontend
      dockerfile: ./.docker/Dockerfile
    environment:
      TZ: Asia/Tokyo
    ports:
      - 3000:3000
    networks:
      - redisdemo
    volumes:
      - ./frontend:/app
      - /app/node_modules
    tty: true
    stdin_open: true

  mysql:
    container_name: mysql
    build: resources/mysql
    hostname: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpassword
      MYSQL_ROOT_PASSWORD: mysqlrootpassword
      MYSQL_DATABASE: redisdemo
      TZ: Asia/Tokyo
    volumes:
      - mysql-data:/var/lib/mysql-files
      - ./resources/mysql/initdb.d:/docker-entrypoint-initdb.d
    networks:
      - redisdemo
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $MYSQL_USER -p $MYSQL_PASSWORD

  redis:
    container_name: redis
    build: resources/redis
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - redisdemo

volumes:
  mysql-data:

networks:
  redisdemo:
